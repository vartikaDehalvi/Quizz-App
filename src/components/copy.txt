import { useState } from 'react'
import ScoreCard from './ScoreCard';
  //  const updatedAnswers = [...userAnswer, newUserAnswers];
  //  setUserAnswer(updatedAnswers);



function QuizApp({onSubmit, quiz, userAnswer, setUserAnswer, uniqueSubject}){
  
    
  const [count, setCount]= useState(0)


function handleOptionSelected(option, count) {
  const questionId = count + 1;

  //Check if the question has already been answered
  const existing = userAnswer.find(ans => ans.id === questionId);

  let updatedAnswers=[];

  if (existing) {
    // Replace existing answer
    updatedAnswers = userAnswer.map(ans =>
      ans.id === questionId ? { ...ans, answer: option } : ans
    );
  } else {
    // Add new answer
    updatedAnswers = [...userAnswer, { id: questionId, answer: option }];
  }

  setUserAnswer(updatedAnswers); // âœ… Update state
  console.log("Updated Answers:", updatedAnswers);
  //console.log(userAnswer); //Can not use this, does not record in real time

}


function handleSubmit() {
  const score = userAnswer.reduce((acc, ans) => {
    const quizItem = quiz.find(q => q.id === ans.id);
    return quizItem && ans.answer === quizItem.answer ? acc + 1 : acc;
  }, 0);

  onSubmit(score);
  
}


      return(
    <>
    <div style={{backgroundColor:"maroon",
       color:"white",
       border:"5px",
       boxShadow:"3px solid grey",
       borderRadius: "5px",
       padding: "1.3rem",
       boxShadow: "0 0 10px grey",
       width: "27rem",
       height: "100%",
       boxSizing: "border-box",} }>

     <h1>Quiz App</h1>
     
     
      <div style={{display:"flex", }}>
        <h3  style={{width:"20%", }}>Q{count+1}.</h3>
        <h3 style={{textAlign:"left",}}>  {quiz[count].question}</h3>
      </div>
      {quiz[count].options.map((o)=> ( <button onClick={()=>handleOptionSelected(o, count)} style={{display: "block", margin:"1rem auto", width:"100%"}}>{o} </button> ))
      }
      
      <div style={{display: "flex", justifyContent:"space-between", margin: "2rem 0" }}>
        <button style={{display: "block",}} onClick={()=> {
          if(count>0) setCount(count-1)}}>Prev</button>
        {count< quiz.length-1 && (<button style={{display: "block", }} onClick={()=> setCount(count+1)}>Next</button>
        )}
        {count>= quiz.length-1 && (<button  style={{display: "block", }} onClick={()=> {handleSubmit()}} >Submit</button>
        )}

      </div>
    
    </div>
    </>
    
  )


}


export default QuizApp
